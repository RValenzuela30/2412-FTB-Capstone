// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int     @id @default(autoincrement())
  name           String
  email          String  @unique
  password       String
  role           String  @default("customer")
  mailingAddress String? // Make optional
  billingInfo    String? // Make optional
  orders         Order[] // assuming you have this relation
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  price     Float
  imageUrl  String
  orderItems OrderItem[]
}

model Order {
  id           Int         @id @default(autoincrement())
  orderNumber  String      @unique
  userId       Int
  orderCost    Float
  createdAt    DateTime    @default(now())

  user         User        @relation(fields: [userId], references: [id])
  orderItems   OrderItem[]
}

// Joins the tables for many to many. Will be able to correlate users and previous orders
model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int

  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}
